service: import-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  httpApi:
    cors:
      allowedOrigins: '*'
      allowedHeaders: '*'
      allowedMethods: '*'
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource:
        - arn:aws:s3:::imported-csv-sandx/uploaded/*
        - arn:aws:s3:::imported-csv-sandx/parsed/*
    - Effect: Allow
      Action:
        - "sqs:*"
      Resource:
        - Fn::GetAtt: [ ImportProductSQSQueue, Arn ]
    - Effect: Allow
      Action:
        - "sns:*"
      Resource:
        Ref: BatchImportProductSNSTopic
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:166088341378:table/Products
        - arn:aws:dynamodb:us-east-1:166088341378:table/Stocks
  environment:
    SQS_URL:
      Ref: ImportProductSQSQueue
    SNS_URL:
      Ref: BatchImportProductSNSTopic
    PRODUCTS_TABLE_NAME: Products
    STOCKS_TABLE_NAME: Stocks
    REGION: us-east-1
    UPLOADED_FOLDER: uploaded
    PARSED_FOLDER: parsed

functions:
  importProductsFile:
    handler: ./src/handler.importProductsFile
    events:
      - httpApi:
          queryStringParameters: 
            name: 
              type: string
          path: /import
          method: get
          description: 'Import a csv'
          responseData: 
            200:
              description: 'Successful response'
            400:
              description: 'Bad request'
            404:
              description: 'Not found'
            500:
              description: 'Server error'
  importFileParser:
    handler: ./src/handler.importFileParser
    events:
      - s3:
          bucket: imported-csv-sandx
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: ./src/handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - ImportProductSQSQueue
              - Arn

resources:
  Resources:
    ImportProductSQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: import-parser-queue
    BatchImportProductSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: batch-import-topic
    BatchImportProductSNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: vadsdrv@gmail.com
        Protocol: email
        TopicArn:
          Ref: BatchImportProductSNSTopic
    FilteredByProductPriceSNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: vadsdrv@yandex.ru
        Protocol: email
        TopicArn:
          Ref: BatchImportProductSNSTopic
        FilterPolicyScope: MessageBody
        FilterPolicy: "{\"title\":[\"Phone\"]}"

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    platform: 'node'
    packager: npm
    packagePath: package.json
  autoswagger:
    title: 'Import service API'
    apiType: 'httpApi'
    generateSwaggerOnDeploy: true
    swaggerPath: 'swagger'
    typefiles: ['./src/interfaces/product.interface.ts']
    basePath: '/'
    schemes: ['https']

plugins:
  # - serverless-plugin-typescript
  - serverless-esbuild
  - serverless-auto-swagger
  - serverless-offline
